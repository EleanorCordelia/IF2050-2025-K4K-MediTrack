/*
 * build.gradle (modul app)
 * Konfigurasi clean merge, sudah stabil dengan testing dan dependensi lengkap.
 */

plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ['test/java']
        }
        resources {
            srcDirs = ['test/resources']
        }
    }
}

javafx {
    version = "21.0.3"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

dependencies {
    // Production Dependencies
    implementation 'org.openjfx:javafx-controls:21.0.3'
    implementation 'org.openjfx:javafx-fxml:21.0.3'
    implementation 'org.openjfx:javafx-graphics:21.0.3'
    implementation 'org.xerial:sqlite-jdbc:3.42.0.0'

    // Testing Dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.openjfx:javafx-controls:21.0.3'
    testImplementation 'org.openjfx:javafx-fxml:21.0.3'
}

application {
    mainClass = 'com.meditrack.MainApp'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }

    // Optional JavaFX testing support (headless) - temporarily disabled
    // systemProperty 'java.awt.headless', 'false'
    // systemProperty 'testfx.robot', 'glass'
    // systemProperty 'testfx.headless', 'true'
    // systemProperty 'prism.order', 'sw'

    // Test result summary
    afterSuite { desc, result ->
        if (!desc.parent) {
            def output = "Test Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
            println output
        }
    }
}

// Task untuk menjalankan hanya unit tests (optional)
tasks.register('unitTest', Test) {
    useJUnitPlatform {
        excludeTags 'integration'
    }
    group = 'verification'
    description = 'Runs unit tests only'
}
